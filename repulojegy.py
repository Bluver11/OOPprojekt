from abc import ABC, abstractmethod
from datetime import datetime ,timedelta

# Absztrakt J√°rat oszt√°ly
class Jarat(ABC):
    def __init__(self, jaratszam: str, celallomas: str, jegyar: float):
        self.jaratszam = jaratszam
        self.celallomas = celallomas
        self.jegyar = jegyar
        self.elerheto = True 

    @abstractmethod
    def jarat_tipus(self):
        pass


# Belf√∂ldi J√°rat
class BelfoldiJarat(Jarat):
    def __init__(self, jaratszam: str, celallomas: str, jegyar: float):
        super().__init__(jaratszam, celallomas, jegyar)

    def jarat_tipus(self):
        return "Belf√∂ldi"


# Nemzetk√∂zi J√°rat
class NemzetkoziJarat(Jarat):
    def __init__(self, jaratszam: str, celallomas: str, jegyar: float):
        super().__init__(jaratszam, celallomas, jegyar)

    def jarat_tipus(self):
        return "Nemzetk√∂zi"


# L√©git√°rsas√°g oszt√°ly
class LegiTarsasag:
    def __init__(self, nev: str):
        self.nev = nev
        self.jaratok = []

    def jarat_hozzaad(self, jarat: Jarat):
        self.jaratok.append(jarat)

    def listaz_jaratokat(self):
        for jarat in self.jaratok:
            print(f"{jarat.jaratszam} - {jarat.celallomas} ({jarat.jarat_tipus()}), √År: {jarat.jegyar} Ft")
        
    def jegyet_foglal(self, utas_nev: str, jarat_index: int, datum_str: str):
     try:
         jarat = self.jaratok[jarat_index - 1]
         if not jarat.elerheto:
            print("‚ùå Ez a j√°rat nem el√©rhet≈ë foglal√°sra.")
            return

         datum = datetime.strptime(datum_str, "%Y-%m-%d")
         if datum < datetime.today():
            print("‚ùå Nem foglalhat√≥ m√∫ltbeli d√°tumra.")
            return

         foglalas = JegyFoglalas(utas_nev, jarat, datum_str)
         self.foglalasok.append(foglalas)
         print(f"\n‚úÖ Foglal√°s sikeres! √År: {jarat.jegyar} Ft")

     except IndexError:
        print("‚ùå Hib√°s j√°ratindex!")
     except ValueError as ve:
        print(f"‚ùå Hib√°s d√°tum: {ve}")

    def foglalas_lemondas(self, utas_nev: str, jaratszam: str):
     for f in self.foglalasok:
        if f.utas_nev == utas_nev and f.jarat.jaratszam == jaratszam:
            self.foglalasok.remove(f)
            print(f"‚ùé Foglal√°s t√∂r√∂lve: {utas_nev} - {jaratszam}")
            return
    print("‚ùå Nincs ilyen foglal√°s!")

    def listaz_foglalasokat(self):
        if not self.foglalasok:
            print("‚ÑπÔ∏è Nincs akt√≠v foglal√°s.")
        for f in self.foglalasok:
            print(f.foglalas_info())


# Jegyfoglal√°s oszt√°ly
class JegyFoglalas:
    def __init__(self, utas_nev: str, jarat: Jarat, datum_str: str):
        self.utas_nev = utas_nev
        self.jarat = jarat
        try:
            self.datum = datetime.strptime(datum_str, "%Y-%m-%d")
        except ValueError:
            raise ValueError("Hib√°s d√°tumform√°tum! (v√°rhat√≥: √â√â√â√â-HH-NN)")

    def foglalas_info(self):
        datum_str = self.datum.strftime("%Y-%m-%d")
        return (f"Foglal√°s: {self.utas_nev} sz√°m√°ra a(z) {self.jarat.jarat_tipus()} "
                f"j√°ratra ({self.jarat.jaratszam}) - {self.jarat.celallomas}, "
                f"D√°tum: {datum_str}, √År: {self.jarat.jegyar} Ft")

def menu():
    print("\n=== L√©git√°rsas√°g Jegyfoglal√≥ Rendszer ===")
    print("1. J√°ratok list√°z√°sa")
    print("2. Jegy foglal√°sa")
    print("3. Foglal√°s lemond√°sa")
    print("4. Foglal√°sok list√°z√°sa")
    print("0. Kil√©p√©s")


if __name__ == "__main__":

    # L√©git√°rsas√°g l√©trehoz√°sa
    airline = LegiTarsasag("Ryanair")

    # J√°ratok hozz√°ad√°sa
    j1 = BelfoldiJarat("HUN101", "Debrecen", 8000)
    j2 = NemzetkoziJarat("INT202", "Berlin", 35000)
    j3 = NemzetkoziJarat("INT303", "London", 42000)

    airline.jarat_hozzaad(j1)
    airline.jarat_hozzaad(j2)
    airline.jarat_hozzaad(j3)

    # D√°tum gener√°l√°s (j√∂v≈ëbeli napok)
    today = datetime.today()
    d1 = (today + timedelta(days=3)).strftime("%Y-%m-%d")
    d2 = (today + timedelta(days=5)).strftime("%Y-%m-%d")
    d3 = (today + timedelta(days=7)).strftime("%Y-%m-%d")

    # Foglal√°sok hozz√°ad√°sa
    airline.foglalasok.append(JegyFoglalas("Kov√°cs Anna", j1, d1))
    airline.foglalasok.append(JegyFoglalas("Szab√≥ B√©la", j1, d2))
    airline.foglalasok.append(JegyFoglalas("Nagy Eszter", j2, d1))
    airline.foglalasok.append(JegyFoglalas("T√≥th G√°bor", j2, d2))
    airline.foglalasok.append(JegyFoglalas("Farkas D√≥ra", j3, d1))
    airline.foglalasok.append(JegyFoglalas("Kiss P√©ter", j3, d3))

    print("üì¶ El≈ëre bet√∂lt√∂tt adatok: 1 l√©git√°rsas√°g, 3 j√°rat, 6 foglal√°s.")

    print("üì¶ El≈ëre bet√∂lt√∂tt adatok: 1 l√©git√°rsas√°g, 3 j√°rat, 6 foglal√°s.")
    while True:
        menu()
        valasztas = input("V√°laszt√°s: ")

        if valasztas == "1":
            airline.listaz_jaratokat()

        elif valasztas == "2":
            airline.listaz_jaratokat()
            try:
                index = int(input("Melyik j√°ratra szeretne foglalni? (sorsz√°m): "))
                nev = input("Utas neve: ")
                datum = input("Utaz√°s d√°tuma (√â√â√â√â-HH-NN): ")
                airline.jegyet_foglal(nev, index,datum)
            except ValueError:
                print("‚ùå √ârv√©nytelen bemenet.")

        elif valasztas == "3":
            nev = input("Add meg a nevet a lemond√°shoz: ")
            jaratszam = input("Add meg a j√°ratsz√°mot: ")
            airline.foglalas_lemondas(nev,jaratszam)

        elif valasztas == "4":
            airline.listaz_foglalasokat()

        elif valasztas == "0":
            print("üëã Kil√©p√©s...")
            break

        else:
            print("‚ùå √ârv√©nytelen opci√≥.")
